workflows:
  ios-archive-unsigned:
    name: iOS Archive - unsigned (.app + .ipa)
    max_build_duration: 60
    instance_type: mac_mini_m2

    environment:
      flutter: 3.35.4
      xcode: latest

    scripts:
      - name: Prepare
        script: |
          set -e
          flutter clean
          flutter pub get
          flutter precache --ios

      - name: Ensure iOS (create if missing)
        script: |
          set -e
          if [ ! -f ios/Runner.xcodeproj/project.pbxproj ]; then
            echo "No iOS folder detected. Creating..."
            rm -rf ios
            flutter create --platforms=ios .
          fi
          ls -la ios || true

      - name: Patch Podfile (safe to run even if no pods)
        script: |
          set -e
          P=ios/Podfile
          if [ -f "$P" ]; then
            # platform :ios, '13.0'
            if grep -q "^platform :ios" "$P"; then
              sed -i '' -e "s/^platform :ios.*/platform :ios, '13.0'/" "$P"
            else
              printf "platform :ios, '13.0'\n%s" "$(cat "$P")" > "$P"
            fi
            # use_frameworks! :linkage => :static
            if grep -q "^use_frameworks!" "$P"; then
              sed -i '' -e "s/^use_frameworks!.*/use_frameworks! :linkage => :static/" "$P"
            else
              awk 'NR==1{print; print "use_frameworks! :linkage => :static"; next}1' "$P" > "$P.tmp" && mv "$P.tmp" "$P"
            fi
          fi
          echo "Podfile (if exists):"
          [ -f "$P" ] && head -n 30 "$P" || echo "No Podfile present."

      - name: Reinstall CocoaPods ONLY if iOS plugins exist
        script: |
          set -e
          # إذا ملف الديبندنـسيز موجود ويحوي قسم iOS غير فارغ، نشغّل بودز
          HAS_PLUGINS=0
          if [ -f .flutter-plugins-dependencies ]; then
            if grep -q '"ios"' .flutter-plugins-dependencies && ! grep -q '"ios":[[:space:]]*\\[\\s*\\]' .flutter-plugins-dependencies; then
              HAS_PLUGINS=1
            fi
          fi
          echo "HAS_PLUGINS=$HAS_PLUGINS"
          if [ "$HAS_PLUGINS" -eq 1 ]; then
            echo "Running CocoaPods install..."
            cd ios
            rm -rf Pods Podfile.lock
            pod repo update
            pod install
            cd ..
          else
            echo "No iOS plugins detected. Skipping CocoaPods."
          fi

      - name: Xcode ARCHIVE (no signing) — auto choose workspace/project
        script: |
          set -e
          BUILD_ARGS=( -scheme Runner -configuration Release -sdk iphoneos -destination "generic/platform=iOS" -archivePath build/Runner.xcarchive clean archive CODE_SIGNING_ALLOWED=NO CODE_SIGNING_REQUIRED=NO CODE_SIGNING_IDENTITY="" DEVELOPMENT_TEAM="" PROVISIONING_PROFILE_SPECIFIER="" IPHONEOS_DEPLOYMENT_TARGET=13.0 )

          if [ -d ios/Runner.xcworkspace ]; then
            echo "Using workspace"
            xcodebuild -workspace ios/Runner.xcworkspace "${BUILD_ARGS[@]}"
          else
            echo "Workspace not found; using project"
            xcodebuild -project ios/Runner.xcodeproj "${BUILD_ARGS[@]}"
          fi

          echo "Archive Apps:"
          ls -la build/Runner.xcarchive/Products/Applications || true

      - name: Package & verify artifacts
        script: |
          set -e
          APP_DIR="build/Runner.xcarchive/Products/Applications/Runner.app"
          [ -d "$APP_DIR" ] || { echo "Runner.app not found in archive"; exit 1; }

          # تحقق أساسي
          if [ -d "$APP_DIR/Frameworks/Flutter.framework" ]; then
            echo "✅ Flutter.framework present"
          else
            echo "⚠️ Flutter.framework missing (may still work on newer Flutter), listing contents:"
            find "$APP_DIR" -maxdepth 2 -print
          fi

          /usr/bin/zip -r -y Runner.app.zip "$APP_DIR"

          rm -rf Payload Runner.ipa
          mkdir -p Payload
          cp -R "$APP_DIR" Payload/Runner.app
          /usr/bin/zip -r -y Runner.ipa Payload
          echo "Created Runner.app.zip and Runner.ipa"

    artifacts:
      - Runner.app.zip
      - Runner.ipa
      - build/Runner.xcarchive/**

    publishing:
      email:
        recipients:
          - ahmed.289ahmed@gmail.com
